#include "basic.h.fsl"
#include "../../Vendor/TheForge/Common_3/Graphics/ShaderUtilities.h.fsl"

STRUCT(VSInput)
{
    DATA(float3, Position, POSITION);
    DATA(uint, Normal, NORMAL);
    DATA(float2, UV, TEXCOORD0);
};

STRUCT(VSOutput)
{
    DATA(float4, Position, SV_Position);
    DATA(float4, Color, COLOR);
};

VSOutput VS_MAIN(VSInput In, SV_InstanceID(uint) InstanceID)
{
    INIT_MAIN;
    VSOutput Out;

#if FT_MULTIVIEW
    float4x4 mvp = uniformBlock.mvp[VR_VIEW_ID];
#else
    float4x4 mvp = uniformBlock.mvp;
#endif

    float3 InPosition = In.Position;

    Out.Position = mul(mvp, float4(InPosition, 1.0f));

    float4 pos = float4(InPosition, 1.0f);
    float4 normal = float4(decodeDir(unpackUnorm2x16(In.Normal)),0.0f);

    float lightIntensity = 1.0f;
    float ambientCoeff = 0.1f;

    float3 lightDir;

    lightDir = normalize(uniformBlock.lightPosition.xyz - pos.xyz);

    float3 blendedColor = uniformBlock.lightColor.rgb * lightIntensity;
    float3 diffuse = blendedColor * max(dot(normal.xyz, lightDir), 0.0);
    float3 ambient = float3(ambientCoeff, ambientCoeff, ambientCoeff);
    Out.Color = float4(diffuse + ambient, 1.0);
    RETURN(Out);
}
